<?xml version="1.0" encoding="utf-8"?>
<!--
  PROJECT:   Mouri Internal Library Essentials
  FILE:      Mile.Project.Cpp.Default.props
  PURPOSE:   Definition for Visual Studio C++ Project

  LICENSE:   The MIT License

  DEVELOPER: MouriNaruto (KurikoMouri@outlook.jp)
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Globals">
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>$(LatestTargetPlatformVersion)</WindowsTargetPlatformVersion>
    <CleanImport>true</CleanImport>
    <MileProjectBuildDate>$([System.DateTime]::Now.ToString("yyyyMMdd"))</MileProjectBuildDate>
    <MileProjectPreprocessorDefinitions></MileProjectPreprocessorDefinitions>
  </PropertyGroup>
  <PropertyGroup Label="Globals" Condition="'$(MileProjectEnableCppWinRTSupport)' == 'true'">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <!--
      Import all Windows Runtime metadata in Windows SDK. By default enable 
      C++/WinRT to include target platform winmds if we didn't override sdk
      references and the C++ Project system isn't already adding them.
    -->
    <CppWinRTImplicitlyExpandTargetPlatform>true</CppWinRTImplicitlyExpandTargetPlatform>
    <!--
      Need to set to 'true' so that Win32 APIs are available; setting
      $(WindowsAppContainer) to 'true' causes the C++ project system to set
      WINAPI_FAMILY=WINAPI_FAMILY_APP unless this property property is also
      'true'.
    -->
    <_NoWinAPIFamilyApp>true</_NoWinAPIFamilyApp>
    <!-- Disable Microsoft.VCLibs reference -->
    <UseCrtSDKReference>false</UseCrtSDKReference>
    <!--
      This is magic that tells msbuild to link against the Desktop platform
      instead of the App platform. This you definitely want, because we're not
      building a true universal "app", we're building a desktop application
      with xaml. Without this, we'll link against the app CRT, and the =
      unpackaged story _will not_ work. Furthermore, APIs like
      CreatePseudoConsole won't be linkable without this. 
    -->
    <_VC_Target_Library_Platform>Desktop</_VC_Target_Library_Platform>
    <!--
      Disable C++/WinRT Libs because we don't want to depend on any Windows
      APIs imported from API Sets.
    -->
    <CppWinRTLibs>false</CppWinRTLibs>
  </PropertyGroup>
  <PropertyGroup Label="Globals" Condition="'$(MileProjectUseProjectProperties)' == 'true'">
    <MileProjectCompanyName Condition="'$(MileProjectCompanyName)'==''">TODO: Company Name</MileProjectCompanyName>
    <MileProjectFileDescription Condition="'$(MileProjectFileDescription)'==''">TODO: File Description</MileProjectFileDescription>
    <MileProjectInternalName Condition="'$(MileProjectInternalName)'==''">$(TargetName)</MileProjectInternalName>
    <MileProjectLegalCopyright Condition="'$(MileProjectLegalCopyright)'==''">© TODO: Company Name. All rights reserved.</MileProjectLegalCopyright>
    <MileProjectOriginalFilename Condition="'$(MileProjectOriginalFilename)'==''">$(TargetName)$(TargetExt)</MileProjectOriginalFilename>
    <MileProjectProductName Condition="'$(MileProjectProductName)'==''">$(TargetName)</MileProjectProductName>
    <MileProjectVersion Condition="'$(MileProjectVersion)'==''">1.0.0.1</MileProjectVersion>
    <MileProjectPreprocessorDefinitions>MILE_PROJECT_VERSION_MAJOR=$([System.Version]::Parse('$(MileProjectVersion)').Major);$(MileProjectPreprocessorDefinitions)</MileProjectPreprocessorDefinitions>
    <MileProjectPreprocessorDefinitions>MILE_PROJECT_VERSION_MINOR=$([System.Version]::Parse('$(MileProjectVersion)').Minor);$(MileProjectPreprocessorDefinitions)</MileProjectPreprocessorDefinitions>
    <MileProjectPreprocessorDefinitions>MILE_PROJECT_VERSION_BUILD=$([System.Version]::Parse('$(MileProjectVersion)').Build);$(MileProjectPreprocessorDefinitions)</MileProjectPreprocessorDefinitions>
    <MileProjectPreprocessorDefinitions>MILE_PROJECT_VERSION_REVISION=$([System.Version]::Parse('$(MileProjectVersion)').Revision);$(MileProjectPreprocessorDefinitions)</MileProjectPreprocessorDefinitions>
    <MileProjectPreprocessorDefinitions Condition="'$(MileProjectVersionTag)'!=''">MILE_PROJECT_VERSION_TAG=$(MileProjectVersionTag);$(MileProjectPreprocessorDefinitions)</MileProjectPreprocessorDefinitions>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <CharacterSet>Unicode</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>

    <ConfigurationType>Application</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='DynamicLibrary'">DynamicLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='StaticLibrary'">StaticLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='StaticLibraryForDriver'">StaticLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='WDMDriver'">Driver</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='KMDFDriver'">Driver</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='UMDFDriver'">DynamicLibrary</ConfigurationType>

    <PlatformToolset>$(DefaultPlatformToolset)</PlatformToolset>
    <PlatformToolset Condition="'$(MileProjectType)' == 'StaticLibraryForDriver'">WindowsKernelModeDriver10.0</PlatformToolset>
    <PlatformToolset Condition="'$(MileProjectType)' == 'WDMDriver'">WindowsKernelModeDriver10.0</PlatformToolset>
    <PlatformToolset Condition="'$(MileProjectType)' == 'KMDFDriver'">WindowsKernelModeDriver10.0</PlatformToolset>
    <PlatformToolset Condition="'$(MileProjectType)' == 'UMDFDriver'">WindowsUserModeDriver10.0</PlatformToolset>
    <PlatformToolset Condition="'$(MileProjectUseClangCLToolset)' == 'true'">ClangCL</PlatformToolset>

    <UseDebugLibraries Condition="'$(Configuration)'=='Debug'">true</UseDebugLibraries>
    <UseDebugLibraries Condition="'$(Configuration)'=='Release'">false</UseDebugLibraries>
    <WholeProgramOptimization Condition="'$(Configuration)'=='Release'">true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="('$(MileProjectType)'=='WDMDriver') Or ('$(MileProjectType)'=='KMDFDriver') Or ('$(MileProjectType)'=='UMDFDriver') Or ('$(MileProjectType)'=='StaticLibraryForDriver')">
    <DriverType>KMDF</DriverType>
    <DriverType Condition="'$(MileProjectType)' == 'WDMDriver'">WDM</DriverType>
    <DebuggerFlavor>DbgengKernelDebugger</DebuggerFlavor>
    <DebuggerFlavor Condition="'$(MileProjectType)' == 'UMDFDriver'">DbgengRemoteDebugger</DebuggerFlavor>
    <TargetVersion>Windows10</TargetVersion>
    <DriverTargetPlatform>Universal</DriverTargetPlatform>
    <ALLOW_DATE_TIME>1</ALLOW_DATE_TIME>
    <UMDF_VERSION_MAJOR Condition="'$(MileProjectType)' == 'UMDFDriver'">2</UMDF_VERSION_MAJOR>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
</Project>
